The following relations keep track of students, their enrollment for classes along with faculty information.

Student (snum: integer, sname: string, major: string, level: string, age: integer)
Class (name: string, meets at: string, room: string, d: integer)
Enrolled (snum: integer, cname: string)
Faculty (fid: integer, fname: string, deptid: integer)

mysql> CREATE DATABASE student;

mysql> USE student;


mysql> CREATE TABLE student(
    snum INT,
    sname VARCHAR(10),
    major VARCHAR(2),
    level VARCHAR(2),
    age int,primary key(snum));

mysql> CREATE TABLE faculty(
    fid INT,fname VARCHAR(20),
    deptid INT,
    PRIMARY KEY(fid));

mysql> CREATE TABLE class(
    cname VARCHAR(20),
    metts_at VARCHAR(10),
    room VARCHAR(10),
    fid INT,
    PRIMARY KEY(cname),
    FOREIGN KEY(fid) REFERENCES faculty(fid));

mysql> CREATE TABLE enrolled(
    snum INT,
    cname VARCHAR(20),
    PRIMARY KEY(snum,cname),
    FOREIGN KEY(snum) REFERENCES student(snum),
    FOREIGN KEY(cname) REFERENCES class(cname));


INSERTIONS:
mysql> INSERT INTO student (snum,sname,major,level,age) VALUES
    -> (1,'jhon','CS','Sr',19),
    -> (2,'smith','CS','Jr',20),
    -> (3,'jacob','CV','Sr',20),
    -> (4,'tom','CS','Jr',20),
    -> (5,'sid','CS','Jr',20),
    -> (6,'harry','CS','Sr',21)

mysql> INSERT INTO faculty (fid,fname, deptid) VALUES
    ->(11,'Harshith',1000),
    ->(12,'Mohan',1000),
    ->(13,'Kumar',1001),
    ->(14,'Shobha',1002),
    ->(15,'Shan',1000);


mysql> INSERT INTO class (cname,meets_at,room,fid) VALUES
    -> ('class1','noon','room1',14),
    -> ('class10','morning','room128',14),
    -> ('class2','morning','room2',12),
    -> ('class3','morning','room3',11),
    -> ('class4','evening','room4',14),
    -> ('class5','night','room3',15),
    -> ('class6','morning','room2',14),
    -> ('class7','morning','room3',14);

mysql> INSERT INTO enrolled (snum,cname) VALUES
    -> (1,'class1'),
    -> (2,'class1'),
    -> (3,'class3'),
    -> (4,'class3'),
    -> (3,'class3'),
    -> (5,'class4');
    -> (1,'class5');
    -> (2,'class5');
    -> (3,'class5');
    -> (4,'class5');
    -> (5,'class5');
    -> (6,'class5');


QUERIES:
Query 1: Find the names of all juniors (level=Jr) who are enrolled for class taught by professor Harshith.
mysql> SELECT DISTINCT s.sname
    FROM student s,class c,faculty f,enrolled e
    WHERE  s.snum=e.snum      AND
           e.cname=c.cname    AND
           s.level='jr'   AND
           f.fname='Harshith' AND
           f.fid=c.fid;


Query 2: Find the names of all classes that either meet in room128 or have 5 or more students enrolled.
mysql> SELECT DISTINCT cname
    FROM class
    WHERE room='room128'
    OR
    cname IN (SELECT e.cname FROM enrolled e GROUP BY e.cname HAVING COUNT(*)>=5);

Query 3: Find the names of all students who are enrolled in two classes that meet at same time.
mysql> SELECT DISTINCT s.sname
    FROM student s
    WHERE s.snum IN (SELECT e1.snum
                FROM enrolled e1,enrolled e2,class c1,class c2
                WHERE e1.snum=e2.snum   AND
                e1.cname<>e2.cname      AND
                    e1.cname=c1.cname       AND
                    e2.cname=c2.cname       AND
                    c1.meets_at=c2.meets_at  );


Description : Outer part of the query extraxts the name of the students from table student. The inner part of the query fetches the snum of the student, the student is enrolled to two different classes c1.cname and c2.cname, these two classes meets at the name time.
Query 4: Find the names of faculty members who teach in every room in which some class is taught.
mysql> SELECT f.fname,f.fid
            FROM faculty f
            WHERE f.fid in ( SELECT fid FROM class
            GROUP BY fid HAVING COUNT(*)=(SELECT COUNT(DISTINCT room) FROM class) );


Query 5: Find the names of the faculty members for whome the combined enrollment of the classes that they teach is less then five.
mysql>  SELECT DISTINCT f.fname
    FROM faculty f
    WHERE f.fid IN (  SELECT c.fid
              FROM class c, enrolled e
              WHERE c.cname = e.cname GROUP BY c.cname HAVING COUNT(c.cname)< 5 );
